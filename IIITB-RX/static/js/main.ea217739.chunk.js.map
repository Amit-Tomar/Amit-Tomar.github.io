{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Label","styled","LabelDescriptor","InputWrapper","Tag","label","currentInputIndex","onDelete","props","icon","faPills","faPrescriptionBottle","faClock","faCalendarAlt","faNotesMedical","Listbox","autoSuggestedList","medications","medicine","dosage","Boolean","window","location","hostname","match","ReactDOM","render","filterOptions","useAutocomplete","id","defaultValue","multiple","freeSolo","options","getOptionLabel","option","getRootProps","getInputLabelProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","value","focused","setAnchorEl","activeStep","length","React","useState","Set","skipped","currentValue","console","log","map","medication","forEach","slice","push","isNaN","stepDescriptions","getStepContent","step","faCheck","color","getByPlaceholderText","isStepSkipped","has","style","padding","Card","Typography","variant","gutterBottom","fontSize","Stepper","index","stepProps","completed","Step","key","StepLabel","paddingBottom","ref","className","placeholder","pattern","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea217739.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useState } from \"react\";\nimport useAutocomplete from \"@material-ui/lab/useAutocomplete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AdjustOutlinedIcon from \"@material-ui/icons/AdjustOutlined\";\nimport styled from \"styled-components\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport matchSorter from \"match-sorter\";\n\nimport {\n  faPrescriptionBottle,\n  faCalendarAlt,\n  faPills,\n  faClock,\n  faPrescription,\n  faCapsules,\n  faNotesMedical,\n  faCheck\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { getByPlaceholderText } from \"@testing-library/dom\";\n\nconst Label = styled(\"label\")`\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n`;\n\nconst LabelDescriptor = styled(\"label\")`\n  padding: 0px 5px 0px 5px;\n  line-height: 1;\n  display: block;\n  position: absolute;\n  left: 10px;\n  top: -7px;\n  z-index: 1;\n  background-color: white;\n  font-size: 12px;\n`;\n\nconst InputWrapper = styled(\"div\")`\n  width: 95%;\n  border: 1px solid #d9d9d9;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    line-height: 26px;\n    padding: 2px 6px;\n    flex-grow: 1;\n    border: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, currentInputIndex, ...props }) => (\n  <div {...props}>\n    {/* <FontAwesomeIcon icon={faPrescriptionBottle} /> */}\n    {/* <FontAwesomeIcon icon={faCapsules} /> */}\n    {/* <FontAwesomeIcon icon={faPrescription} /> */}\n    {currentInputIndex === 0 && <FontAwesomeIcon icon={faPills} />}\n    {currentInputIndex === 1 && <FontAwesomeIcon icon={faPrescriptionBottle} />}\n    {currentInputIndex === 2 && <FontAwesomeIcon icon={faClock} />}\n    {currentInputIndex === 3 && <FontAwesomeIcon icon={faCalendarAlt} />}\n    {currentInputIndex >= 4 && <FontAwesomeIcon icon={faNotesMedical} />}\n    <span>{label}</span>\n    {/* <CloseIcon onClick={onDelete} /> */}\n    {/* <AdjustOutlinedIcon></AdjustOutlinedIcon> */}\n  </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: #fafafa;\n  border: 1px solid #e8e8e8;\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 18px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled(\"ul\")`\n  width: 300px;\n  margin: 0;\n  margin-top: 2px;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected=\"true\"] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus=\"true\"] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\nconst filterOptions = (options, { inputValue }) =>\n  matchSorter(options, inputValue);\n\nconst handleAutocomplete = (e, valueTags) => {\n  //   e.preventDefault();\n  console.log(e);\n  //   const tagIdsArray = [];\n  //   valueTags.forEach(valueTag => {\n  //     tagIdsArray.push(\n  //       Number(tags.filter(tag => valueTag.title === tag.title).shift().id)\n  //     );\n  //   });\n  //   const tagIds = [...new Set(tagIdsArray)];\n  //   handleTag(tagIds);\n};\n\nvar autoSuggestedList = [];\n\nexport default function Autocomplete(filterOptions = { filterOptions }) {\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n    focused,\n    setAnchorEl\n  } = useAutocomplete({\n    id: \"customized-hook-demo\",\n    defaultValue: null,\n    multiple: true,\n    freeSolo: true,\n    options: autoSuggestedList,\n    // onChange: handleAutocomplete,\n    getOptionLabel: option => option\n  });\n\n  const activeStep = value.length;\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  autoSuggestedList.length = 0;\n  let currentValue = getInputProps().value;\n  console.log(getInputProps());\n  if (activeStep === 0) {\n    autoSuggestedList = medications.map(medication => medication.medicine);\n  } else if (activeStep === 1) {\n    medications.forEach(medication => {\n      if (medication.medicine === value[0]) {\n        autoSuggestedList = medication.dosage.slice();\n      }\n    });\n\n    if (currentValue) {\n      autoSuggestedList.push(currentValue + \"mg\");\n      autoSuggestedList.push(currentValue + \"ml\");\n      autoSuggestedList.push(currentValue + \"mg/ml\");\n    }\n  } else if (activeStep === 2) {\n    if (!isNaN(currentValue)) {\n      currentValue = currentValue || 1;\n      autoSuggestedList.push(\n        currentValue + \"-\" + currentValue + \"-\" + currentValue\n      );\n      autoSuggestedList.push(\n        currentValue +\n          \"-\" +\n          currentValue +\n          \"-\" +\n          currentValue +\n          \"-\" +\n          currentValue\n      );\n      autoSuggestedList.push(\"0-\" + currentValue + \"-\" + currentValue);\n      autoSuggestedList.push(currentValue + \"-0-\" + currentValue);\n      autoSuggestedList.push(currentValue + \"-\" + currentValue + \"-0\");\n\n      autoSuggestedList.push(\n        \"0-\" + currentValue + \"-\" + currentValue + \"-\" + currentValue\n      );\n      autoSuggestedList.push(\n        currentValue + \"-0-\" + currentValue + \"-\" + currentValue\n      );\n      autoSuggestedList.push(\n        currentValue + \"-\" + currentValue + \"-0-\" + currentValue\n      );\n      autoSuggestedList.push(\n        currentValue + \"-\" + currentValue + \"-\" + currentValue + \"-0\"\n      );\n    }\n  } else if (activeStep === 3) {\n    if (!isNaN(currentValue)) {\n      currentValue = currentValue || 1;\n      autoSuggestedList.push(currentValue + \"day\");\n      autoSuggestedList.push(currentValue + \"week\");\n      autoSuggestedList.push(currentValue + \"month\");\n    }\n  }\n\n  const stepDescriptions = [\n    \"Medicine\",\n    \"Dosage\",\n    \"Dosing Time\",\n    \"Duration\",\n    \"Remark\"\n  ];\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return \"Medicine\";\n      case 1:\n        return \"Dosage\";\n      case 2:\n        return \"Dosing Time\";\n      case 3:\n        return \"Duration\";\n      case 4:\n        return \"Suggestion\";\n      default:\n        return <FontAwesomeIcon icon={faCheck} color=\"green\" />;\n    }\n  }\n\n  function getByPlaceholderText(step) {\n    switch (step) {\n      case 0:\n        return \"Diazepam\";\n      case 1:\n        return \"10mg\";\n      case 2:\n        return \"1-1-1\";\n      case 3:\n        return \"4day\";\n      case 4:\n        return \"Suggestion\";\n      default:\n        return <FontAwesomeIcon icon={faCheck} color=\"green\" />;\n    }\n  }\n\n  const isStepOptional = step => {\n    return step === 4;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    //setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    //setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    //setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    //setActiveStep(0);\n  };\n\n  return (\n    <div style={{ padding: \"24px\" }}>\n      <Card style={{ padding: \"10px\" }}>\n        <Typography variant=\"h3\" gutterBottom style={{ fontSize: \"2.5em\" }}>\n          Prescription for Amit Tomar\n        </Typography>\n\n        <Typography\n          variant=\"h6\"\n          gutterBottom\n          style={{ fontSize: \"1em\", color: \"grey\" }}\n        >\n          Dr. Robert N., General Physician\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          gutterBottom\n          style={{ fontSize: \"1em\", color: \"grey\" }}\n        >\n          Last visited on : 2 Nov 2019\n        </Typography>\n      </Card>\n\n      <div style={{ padding: \"10px\" }}>\n        {/* orientation=\"vertical\" */}\n        <Stepper activeStep={activeStep}>\n          {stepDescriptions.map((label, index) => {\n            label = index < 4 ? label + \"*\" : label;\n            const stepProps = {};\n            const labelProps = {};\n            //   if (isStepOptional(index)) {\n            //     labelProps.optional = (\n            //       <Typography variant=\"caption\">Optional</Typography>\n            //     );\n            //   }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <Label {...getInputLabelProps()} style={{ paddingBottom: \"10px\" }}>\n          Press enter after input\n        </Label>\n        <div {...getRootProps()}>\n          <InputWrapper ref={setAnchorEl} className={focused ? \"focused\" : \"\"}>\n            <LabelDescriptor {...getInputLabelProps()}>\n              {getStepContent(activeStep)}\n            </LabelDescriptor>\n            {value.map((option, index) => (\n              <Tag\n                label={option || option}\n                currentInputIndex={index}\n                {...getTagProps({ index })}\n              />\n            ))}\n            {activeStep < 5 && (\n              <input\n                {...getInputProps()}\n                placeholder={getByPlaceholderText(activeStep)}\n                pattern=\"[A-Z]\"\n              />\n            )}\n          </InputWrapper>\n        </div>\n        {groupedOptions.length > 0 ? (\n          <Listbox {...getListboxProps()}>\n            {groupedOptions.map((option, index) => (\n              <li {...getOptionProps({ option, index })}>\n                <span>{option}</span>\n                <CheckIcon fontSize=\"small\" />\n              </li>\n            ))}\n          </Listbox>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nvar medications = [\n  {\n    medicine: \"Risperidone\",\n    dosage: [\"0.25mg\", \"0.5mg\", \"1mg\", \"2mg\", \"3mg\", \"4mg\"]\n  },\n  {\n    medicine: \"Olanzapine\",\n    dosage: [\"2.5mg\", \"5mg\", \"7.5mg\", \"10mg\", \"15mg\", \"20mg\"]\n  },\n  {\n    medicine: \"Clozapine\",\n    dosage: [\"12.5mg\", \"25mg\", \"50mg\", \"100mg\", \"200mg\"]\n  },\n  {\n    medicine: \"Haloperidol\",\n    dosage: [\"0.5mg\", \"1mg\", \"2mg\", \"5mg\", \"10mg\", \"20mg\"]\n  },\n  {\n    medicine: \"Chlorpromazine\",\n    dosage: [\"10mg\", \"25mg\", \"50mg\", \"100mg\", \"200mg\"]\n  },\n  {\n    medicine: \"Trihexyphenidyl\",\n    dosage: [\"2mg\"]\n  },\n  {\n    medicine: \"Imipramine\",\n    dosage: [\"10mg\", \"25mg\", \"50mg\"]\n  },\n  {\n    medicine: \"Amitriptyline\",\n    dosage: [\"10mg\", \"25mg\", \"50mg\", \"75mg\", \"100mg\", \"150mg\"]\n  },\n  {\n    medicine: \"Flouxetine\",\n    dosage: [\"10mg\", \"20mg\", \"40mg\"]\n  },\n  {\n    medicine: \"Sertraline\",\n    dosage: [\"25mg\", \"50mg\", \"100mg\"]\n  },\n  {\n    medicine: \"Paroxetine\",\n    dosage: [\"12.5mg\", \"25mg\", \"37.5mg\", \"10mg\", \"20mg\", \"30mg\", \"40mg\"]\n  },\n  {\n    medicine: \"Sodium Valproate\",\n    dosage: [\"125mg\", \"250mg\", \"500mg\", \"1gm\"]\n  },\n  {\n    medicine: \"Carbamazepine\",\n    dosage: [\"100mg\", \"200mg\", \"300mg\", \"400mg\"]\n  },\n  {\n    medicine: \"Lithium\",\n    dosage: [\"300mg\", \"400mg\", \"350mg\"]\n  },\n  {\n    medicine: \"Clonidine\",\n    dosage: [\"0.1mg\", \"0.2mg\", \"0.3mg\"]\n  },\n  {\n    medicine: \"Atomoxetine\",\n    dosage: [\"10mg\", \"18mg\", \"25mg\", \"60mg\", \"60mg\", \"80mg\", \"100mg\"]\n  },\n  {\n    medicine: \"Lorazepam\",\n    dosage: [\"0.5mg\", \"1mg\", \"2mg\"]\n  },\n  {\n    medicine: \"Diazepam\",\n    dosage: [\"2mg\", \"5mg\", \"10mg\"]\n  },\n  {\n    medicine: \"Oxazepam\",\n    dosage: [\"10mg\", \"15mg\", \"30mg\"]\n  },\n  {\n    medicine: \"Disulfiram\",\n    dosage: [\"250mg\", \"500mg\"]\n  },\n  {\n    medicine: \"Naltrexone\",\n    dosage: [\"50mg\"]\n  },\n  {\n    medicine: \"Acamprosate\",\n    dosage: [\"33mg\"]\n  },\n  {\n    medicine: \"Nicotine Gums\",\n    dosage: [\"2mg\", \"4mg\"]\n  },\n  {\n    medicine: \"Varenicline\",\n    dosage: [\"0.5mg\", \"1mg\"]\n  },\n  {\n    medicine: \"Injection Fluphenazine\",\n    dosage: [\"12.5mg\", \"25mg\"]\n  },\n  {\n    medicine: \"Injection Haloperidol\",\n    dosage: [\"50mg\", \"100mg\"]\n  },\n  {\n    medicine: \"Injection Flupenthixol\",\n    dosage: [\"20mg\", \"40mg\"]\n  },\n  {\n    medicine: \"Injection Lorazepam\",\n    dosage: [\"2mg\", \"4mg\"]\n  },\n  {\n    medicine: \"Injection Diazepam\",\n    dosage: [\"5mg\", \"10mg\"]\n  },\n  {\n    medicine: \"Injection Promathazine\",\n    dosage: [\"12.5mg\", \"25mg\", \"50mg\", \"100mg\"]\n  },\n  {\n    medicine: \"Injection Thiamine/Multivitamin\",\n    dosage: [\"100mg/ml\"]\n  }\n];\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}